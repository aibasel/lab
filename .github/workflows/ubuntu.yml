name: Lab

on: [push]

jobs:
  build:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set revision
      run: |
        # Set environment variable with the latest revision hash on the default branch.
        echo "::set-env name=DOWNWARD_REVISION::`hg id -r default http://hg.fast-downward.org`"

    # Compile each Fast Downward revision only once and cache the results.
    - name: Cache revisions
      id: cache-revisions
      uses: actions/cache@v1
      with:
        path: revision-cache
        # TODO: Remove Python version from key once all versions compile Fast Downward.
        key: ${{ runner.os }}-revision-cache-${{ matrix.python-version }}-${{ env.DOWNWARD_REVISION }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Show environment
      run: |
        python --version
        python3 -c "import multiprocessing as m; print('CPUs:', m.cpu_count())"

    - name: Install tox
      run: |
        python -m pip install --upgrade pip tox

    - name: Check style
      if: matrix.python-version == '3.6'
      run: |
        tox -e docs,style

    - name: Setup directory for dependencies
      run: |
        mkdir ../deps
        pushd ../deps
        # Add directory to PATH.
        echo "::add-path::$(pwd)"

    - name: Compile FF
      working-directory: ../deps
      run: |
        echo Build FF
        sudo apt-get -y install g++ make flex bison
        wget http://fai.cs.uni-saarland.de/hoffmann/ff/FF-v2.3.tgz
        tar -xzvf FF-v2.3.tgz
        cd FF-v2.3/
        make -j
        cp ff ../
        cd ..
        rm -rf FF-v2.3/
        echo Done building FF

    - name: Compile VAL
      working-directory: ../deps
      run: |
        echo Build VAL
        sudo apt-get -y install g++ make flex bison
        git clone https://github.com/KCL-Planning/VAL.git
        cd VAL
        git checkout a5565396007eee73ac36527fbf904142b3077c74
        make clean  # Remove old build artifacts and binaries.
        sed -i 's/-Werror //g' Makefile  # Ignore warnings.
        make -j
        mv validate ../
        cd ../
        rm -rf VAL
        echo Done building VAL

    - name: Clone benchmarks
      working-directory: ../deps
      run: |
        export DOWNWARD_BENCHMARKS=`realpath downward-benchmarks`
        git clone https://github.com/aibasel/downward-benchmarks ${DOWNWARD_BENCHMARKS}
        echo "::set-env name=DOWNWARD_BENCHMARKS::${DOWNWARD_BENCHMARKS}"

    - name: Run tests
      run: |
        # Updating the installed packages takes very long, so we don't do it.
        # sudo apt-get update && sudo apt-get -y upgrade

        echo PATH: "$PATH"
        ls ../deps
        echo Aha

        export DOWNWARD_REVISION_CACHE="${GITHUB_WORKSPACE}/revision-cache"
        echo CACHE: $DOWNWARD_REVISION_CACHE

        # Ensure that directory is present even if Python version doesn't create it.
        # TODO: remove this once we drop the old Python versions.
        mkdir -p ${DOWNWARD_REVISION_CACHE}
        ls ${DOWNWARD_REVISION_CACHE}

        pushd ../deps

        # Clone Fast Downward.
        time sudo apt-get -y install mercurial g++ cmake make python
        export HG_DOWNWARD_REPO=`realpath fast-downward`
        time hg clone http://hg.fast-downward.org ${HG_DOWNWARD_REPO}

        # Clone temporary Git version of Fast Downward.
        export GIT_DOWNWARD_REPO=`realpath fast-downward-git`
        time git clone https://github.com/aibasel/git-downward.git ${GIT_DOWNWARD_REPO}

        popd

        export DOWNWARD_REPO=${HG_DOWNWARD_REPO}
        time tox -e py

        export DOWNWARD_REPO=${GIT_DOWNWARD_REPO}
        time tox -e py
